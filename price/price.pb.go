// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: price/price.proto

package price

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Type int32

const (
	Type_LIST     Type = 0
	Type_INTERNAL Type = 1
	Type_GOGS     Type = 2
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "LIST",
		1: "INTERNAL",
		2: "GOGS",
	}
	Type_value = map[string]int32{
		"LIST":     0,
		"INTERNAL": 1,
		"GOGS":     2,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_price_price_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_price_price_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_price_price_proto_rawDescGZIP(), []int{0}
}

type Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId  string               `protobuf:"bytes,2,opt,name=productId,proto3" json:"productId,omitempty"`
	Value      float64              `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	ValidFrom  *timestamp.Timestamp `protobuf:"bytes,4,opt,name=validFrom,proto3" json:"validFrom,omitempty"`
	ValidThru  *timestamp.Timestamp `protobuf:"bytes,5,opt,name=validThru,proto3" json:"validThru,omitempty"`
	Type       Type                 `protobuf:"varint,6,opt,name=type,proto3,enum=price.Type" json:"type,omitempty"`
	CustomerId string               `protobuf:"bytes,7,opt,name=customerId,proto3" json:"customerId,omitempty"`
}

func (x *Price) Reset() {
	*x = Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_price_price_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file_price_price_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file_price_price_proto_rawDescGZIP(), []int{0}
}

func (x *Price) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Price) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *Price) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Price) GetValidFrom() *timestamp.Timestamp {
	if x != nil {
		return x.ValidFrom
	}
	return nil
}

func (x *Price) GetValidThru() *timestamp.Timestamp {
	if x != nil {
		return x.ValidThru
	}
	return nil
}

func (x *Price) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_LIST
}

func (x *Price) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

type SearchParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId  string `protobuf:"bytes,2,opt,name=productId,proto3" json:"productId,omitempty"`
	CustomerId string `protobuf:"bytes,3,opt,name=customerId,proto3" json:"customerId,omitempty"`
	Type       Type   `protobuf:"varint,4,opt,name=type,proto3,enum=price.Type" json:"type,omitempty"`
}

func (x *SearchParams) Reset() {
	*x = SearchParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_price_price_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchParams) ProtoMessage() {}

func (x *SearchParams) ProtoReflect() protoreflect.Message {
	mi := &file_price_price_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchParams.ProtoReflect.Descriptor instead.
func (*SearchParams) Descriptor() ([]byte, []int) {
	return file_price_price_proto_rawDescGZIP(), []int{1}
}

func (x *SearchParams) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SearchParams) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *SearchParams) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *SearchParams) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_LIST
}

var File_price_price_proto protoreflect.FileDescriptor

var file_price_price_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x02, 0x0a, 0x05,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46,
	0x72, 0x6f, 0x6d, 0x12, 0x38, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x68, 0x72, 0x75,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x68, 0x72, 0x75, 0x12, 0x1f, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7d,
	0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x2a, 0x28, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x47, 0x4f, 0x47, 0x53, 0x10, 0x02, 0x32, 0x68, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x53, 0x72, 0x76, 0x12, 0x2f, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x13, 0x2e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22,
	0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x67, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_price_price_proto_rawDescOnce sync.Once
	file_price_price_proto_rawDescData = file_price_price_proto_rawDesc
)

func file_price_price_proto_rawDescGZIP() []byte {
	file_price_price_proto_rawDescOnce.Do(func() {
		file_price_price_proto_rawDescData = protoimpl.X.CompressGZIP(file_price_price_proto_rawDescData)
	})
	return file_price_price_proto_rawDescData
}

var file_price_price_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_price_price_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_price_price_proto_goTypes = []interface{}{
	(Type)(0),                   // 0: price.Type
	(*Price)(nil),               // 1: price.Price
	(*SearchParams)(nil),        // 2: price.SearchParams
	(*timestamp.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_price_price_proto_depIdxs = []int32{
	3, // 0: price.Price.validFrom:type_name -> google.protobuf.Timestamp
	3, // 1: price.Price.validThru:type_name -> google.protobuf.Timestamp
	0, // 2: price.Price.type:type_name -> price.Type
	0, // 3: price.SearchParams.type:type_name -> price.Type
	2, // 4: price.PriceSrv.GetPrice:input_type -> price.SearchParams
	1, // 5: price.PriceSrv.CreatePrice:input_type -> price.Price
	1, // 6: price.PriceSrv.GetPrice:output_type -> price.Price
	1, // 7: price.PriceSrv.CreatePrice:output_type -> price.Price
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_price_price_proto_init() }
func file_price_price_proto_init() {
	if File_price_price_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_price_price_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_price_price_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_price_price_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_price_price_proto_goTypes,
		DependencyIndexes: file_price_price_proto_depIdxs,
		EnumInfos:         file_price_price_proto_enumTypes,
		MessageInfos:      file_price_price_proto_msgTypes,
	}.Build()
	File_price_price_proto = out.File
	file_price_price_proto_rawDesc = nil
	file_price_price_proto_goTypes = nil
	file_price_price_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PriceSrvClient is the client API for PriceSrv service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PriceSrvClient interface {
	GetPrice(ctx context.Context, in *SearchParams, opts ...grpc.CallOption) (*Price, error)
	CreatePrice(ctx context.Context, in *Price, opts ...grpc.CallOption) (*Price, error)
}

type priceSrvClient struct {
	cc grpc.ClientConnInterface
}

func NewPriceSrvClient(cc grpc.ClientConnInterface) PriceSrvClient {
	return &priceSrvClient{cc}
}

func (c *priceSrvClient) GetPrice(ctx context.Context, in *SearchParams, opts ...grpc.CallOption) (*Price, error) {
	out := new(Price)
	err := c.cc.Invoke(ctx, "/price.PriceSrv/GetPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *priceSrvClient) CreatePrice(ctx context.Context, in *Price, opts ...grpc.CallOption) (*Price, error) {
	out := new(Price)
	err := c.cc.Invoke(ctx, "/price.PriceSrv/CreatePrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PriceSrvServer is the server API for PriceSrv service.
type PriceSrvServer interface {
	GetPrice(context.Context, *SearchParams) (*Price, error)
	CreatePrice(context.Context, *Price) (*Price, error)
}

// UnimplementedPriceSrvServer can be embedded to have forward compatible implementations.
type UnimplementedPriceSrvServer struct {
}

func (*UnimplementedPriceSrvServer) GetPrice(context.Context, *SearchParams) (*Price, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPrice not implemented")
}
func (*UnimplementedPriceSrvServer) CreatePrice(context.Context, *Price) (*Price, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePrice not implemented")
}

func RegisterPriceSrvServer(s *grpc.Server, srv PriceSrvServer) {
	s.RegisterService(&_PriceSrv_serviceDesc, srv)
}

func _PriceSrv_GetPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PriceSrvServer).GetPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/price.PriceSrv/GetPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PriceSrvServer).GetPrice(ctx, req.(*SearchParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _PriceSrv_CreatePrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Price)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PriceSrvServer).CreatePrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/price.PriceSrv/CreatePrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PriceSrvServer).CreatePrice(ctx, req.(*Price))
	}
	return interceptor(ctx, in, info, handler)
}

var _PriceSrv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "price.PriceSrv",
	HandlerType: (*PriceSrvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPrice",
			Handler:    _PriceSrv_GetPrice_Handler,
		},
		{
			MethodName: "CreatePrice",
			Handler:    _PriceSrv_CreatePrice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "price/price.proto",
}
